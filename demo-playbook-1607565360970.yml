---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# Demo-Playbook
# https://cloud.redhat.com/insights/remediations/3e58d355-6cd1-4f27-b580-e1b8bbfedc4e
# Generated by Red Hat Insights on Thu, 10 Dec 2020 01:56:00 GMT
# Created by armando.vega@javanes.com

- name: run insights to obtain latest diagnosis info
  hosts: "node1,node2,node3"
  become: True
  tasks:
    - name: obtain diagnosis info
      command: 'insights-client --diagnosis 3e58d355-6cd1-4f27-b580-e1b8bbfedc4e'
      register: insights_result
      changed_when: false
      check_mode: false
    - name: register insights report as fact for use by other plays
      set_fact: insights_report={{ insights_result.stdout }}

# CPU performance is decreased when the dynamic tickless option is not enabled
# Identifier: (advisor:decrease_performance_latency_sensitive_workload|DECREASE_PERFORMANCE_LATENCY_SENSITIVE_WORKLOAD,fix)
# Version: 47ec9f1f3ba2496cf4b64ce0a2201f0bae90c34d
- name: Playbook for the persistent resolution
  hosts: "node1,node2,node3"
  become: true
  vars:
    pydata: "{{ insights_report.details['decrease_performance_latency_sensitive_workload|DECREASE_PERFORMANCE_LATENCY_SENSITIVE_WORKLOAD'] }}"

  tasks:
  - when:
    - pydata is defined
    - pydata.cpu_count is defined
    - pydata.firmware == "bios"
    block:
    - name: Enable dynamic tickless behavior for {{ pydata.cpu_count }} core
      lineinfile:
        path: /etc/default/grub
        regexp: ^(\s*GRUB_CMDLINE_LINUX.*)(['"]\s*)$
        line: '\1 nohz_full=1-{{ pydata.cpu_count }}\2'
        backrefs: yes

    - name: To persistently enable behavior for BIOS firmware
      command: grub2-mkconfig -o /etc/grub2.cfg
      register: grub_change

    - name: Persistently add the rcu threads for core 0
      lineinfile:
        dest: "/etc/rc.d/rc.local"
        line: "for i in `pgrep rcu[^c]` ; do taskset -pc 0 $i ; done"
        mode: a+x
        owner: root
        group: root
      ignore_errors: true

    - name: Reboot the system
      set_fact:
        insights_needs_reboot: True
      when: grub_change.changed

  - when:
    - pydata is defined
    - pydata.cpu_count is defined
    - pydata.firmware == "uefi"
    block:
    - name: Enable dynamic tickless behavior for {{ pydata.cpu_count }} core
      lineinfile:
        path: /etc/default/grub
        regexp: ^(\s*GRUB_CMDLINE_LINUX.*)(['"]\s*)$
        line: '\1 nohz_full=1-{{ pydata.cpu_count }}\2'
        backrefs: yes

    - name: To persistently enable behavior for UEFI firmware
      command: grub2-mkconfig -o /etc/grub2-efi.cfg
      register: grub_change

    - name: Persistently add the rcu threads for core 0
      lineinfile:
        dest: "/etc/rc.d/rc.local"
        line: "for i in `pgrep rcu[^c]` ; do taskset -pc 0 $i ; done"
        mode: a+x
        owner: root
        group: root
      ignore_errors: true

    - name: Reboot the system
      set_fact:
        insights_needs_reboot: True
      when: grub_change.changed


# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: "node1,node2,node3"
  become: True
  gather_facts: False
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: "{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}"
            port: "{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}"
            delay: 15
            search_regex: OpenSSH
            timeout: 300
          become: false

- name: run insights
  hosts: "node1,node2,node3"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false